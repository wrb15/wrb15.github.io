mod0$deviance
mod0$df.residual
mod0$deviance/mod0$df.residual
#with an overdispersion score of 6.39, we find that our data is significantly over dispersed so we re-run our datausing the quasipoisson distribution.
#Moons~Distance:Mass family=quasipoisson
mod5<-glm(Moons~Distance*Mass, family=quasipoisson, data=ex)
#rough goodness of fit test
pchisq(mod5$deviance, mod5$df.residual, lower.tail=F)
#Summary of our data
summary(mod5)
#Plot our model
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Mass")
#Diagnostic Plots
par(mfrow=c(2,2))
plot(mod5)
#interpret results#
co<-coefficients(mod5)
exp(co[2])
exp(confint(co[2]))
#SET UP
setwd("/Users/willarosebrooks/Desktop/DUKE FALL 2017/ENV 710")
#INSTALL THINGS
source("pair.fun.R")
library(car)
library(Sleuth3)
library(boot)
#READ IN DATA
ex<-ex2226
#explore data by plotting
pairs(ex)
#GLM models for every combination of variables
#full model
mod0<-glm(Moons~Mass*Distance, family=poisson, data=ex)
#Moons~Mass
mod1<-glm(Moons~Mass, family=poisson, data=ex)
#Moons~Distance
mod2<-glm(Moons~Distance, family=poisson, data=ex)
#Moons~Distance:Mass
mod3<-glm(Moons~Distance:Mass, family=poisson, data=ex)
#Moons~Mass+Distance
mod4<-glm(Moons~Mass+Distance, family=poisson, data=ex)
#compare each model looking at AIC scores
AIC(mod0, mod1, mod2, mod3, mod4)
#LRT test mod0 and mod1
anova(mod0, mod1, test="LRT")
#LRT test mod0 and mod2
anova(mod0, mod2, test="LRT")
#LRT test mod0 and mod3
anova(mod0, mod3, test="LRT")
#LRT test mod0 and mod4
anova(mod0, mod4, test="LRT")
#checking for overdispersion. get 6.39, which is greater than 2
summary(mod0)
mod0$deviance
mod0$df.residual
mod0$deviance/mod0$df.residual
#with an overdispersion score of 6.39, we find that our data is significantly over dispersed so we re-run our datausing the quasipoisson distribution.
#Moons~Distance:Mass family=quasipoisson
mod5<-glm(Moons~Distance*Mass, family=quasipoisson, data=ex)
#rough goodness of fit test
pchisq(mod5$deviance, mod5$df.residual, lower.tail=F)
#Summary of our data
summary(mod5)
#Plot our model
par(mfrow=c(1,2))
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Mass")
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Distance")
#Diagnostic Plots
par(mfrow=c(2,2))
plot(mod5)
#Interpret Coefficients
co<-coefficients(mod5)
exp(co[2])
exp(co[3])
#Confidence Interval
exp(confint(mod5))
#Plotting the data:
#if there is more than one continuous independent variable (IV) left in the model, then graph the response variable against IV1, keeping IV2 at its mean value. Then, graph the next plot over IV2, keeping IV1 at its mean value.
coeff <- coefficients(mod5)
xvals <- sort(ex$Mass)
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means <- coeff[1]+coeff[2]*xvals
mean.values <- exp(log.means)
lines(xvals, mean.values, lwd=2)
#Plotting the data:
#if there is more than one continuous independent variable (IV) left in the model, then graph the response variable against IV1, keeping IV2 at its mean value. Then, graph the next plot over IV2, keeping IV1 at its mean value.
#PLOT 1
coeff <- coefficients(mod5)
xvals <- sort(ex$Mass)
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means <- coeff[1]+coeff[2]*xvals
mean.values <- exp(log.means)
lines(xvals, mean.values, lwd=2)
#PLOT 2
coeff1 <- coefficients(mod5)
xvals1 <- sort(ex$Distance)
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means1 <- coeff1[1]+coeff1[2]*xvals1
mean.values1 <- exp(log.means1)
lines(xvals1, mean.values1, lwd=2)
knitr::opts_chunk$set(echo = TRUE)
#SET UP
setwd("/Users/willarosebrooks/Desktop/DUKE FALL 2017/ENV 710")
#INSTALL THINGS
source("pair.fun.R")
library(car)
library(Sleuth3)
library(boot)
#READ IN DATA
ex<-ex2226
#explore data by plotting
pairs(ex)
#GLM models for every combination of variables
#full model
mod0<-glm(Moons~Mass*Distance, family=poisson, data=ex)
#Moons~Mass
mod1<-glm(Moons~Mass, family=poisson, data=ex)
#Moons~Distance
mod2<-glm(Moons~Distance, family=poisson, data=ex)
#Moons~Distance:Mass
mod3<-glm(Moons~Distance:Mass, family=poisson, data=ex)
#Moons~Mass+Distance
mod4<-glm(Moons~Mass+Distance, family=poisson, data=ex)
#compare each model looking at AIC scores
AIC(mod0, mod1, mod2, mod3, mod4)
#LRT test mod0 and mod1
anova(mod0, mod1, test="LRT")
#LRT test mod0 and mod2
anova(mod0, mod2, test="LRT")
#LRT test mod0 and mod3
anova(mod0, mod3, test="LRT")
#LRT test mod0 and mod4
anova(mod0, mod4, test="LRT")
#checking for overdispersion. get 6.39, which is greater than 2
summary(mod0)
mod0$deviance
mod0$df.residual
mod0$deviance/mod0$df.residual
#with an overdispersion score of 6.39, we find that our data is significantly over dispersed so we re-run our datausing the quasipoisson distribution.
#Moons~Distance:Mass family=quasipoisson
mod5<-glm(Moons~Distance*Mass, family=quasipoisson, data=ex)
#rough goodness of fit test
pchisq(mod5$deviance, mod5$df.residual, lower.tail=F)
#Summary of our data
summary(mod5)
#Plot our model
par(mfrow=c(1,2))
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Mass")
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Distance")
#Diagnostic Plots
par(mfrow=c(2,2))
plot(mod5)
#Interpret Coefficients
co<-coefficients(mod5)
exp(co[2])
exp(co[3])
#Confidence Interval
exp(confint(mod5))
#Plotting the data:
#if there is more than one continuous independent variable (IV) left in the model, then graph the response variable against IV1, keeping IV2 at its mean value. Then, graph the next plot over IV2, keeping IV1 at its mean value.
#best interpretation of what the above means
#PLOT 1
coeff<-coefficients(mod5)
xvals<-sort(ex$Mass)
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means <-coeff[1]+coeff[2]*xvals
mean.values<-exp(log.means)
lines(xvals, mean.values, lwd=2)
#PLOT 2
coeff1<-coefficients(mod5)
xvals1<-sort(ex$Distance)
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means1<-coeff1[1]+coeff1[2]*xvals1
mean.values1<-exp(log.means1)
lines(xvals1, mean.values1, lwd=2)
#PLOT 3
avgD<-mean(ex$Distance)
avgD
plot(ex$MAss, ex$Moons, lwd=2, las=1, pch=19, col="grey", cex=1.2, xlab="Mass", ylab=expression(paste("Number of Moons")))
#SET UP
setwd("/Users/willarosebrooks/Desktop/DUKE FALL 2017/ENV 710")
#INSTALL THINGS
source("pair.fun.R")
library(car)
library(Sleuth3)
library(boot)
#READ IN DATA
ex<-ex2226
#explore data by plotting
pairs(ex)
#GLM models for every combination of variables
#full model
mod0<-glm(Moons~Mass*Distance, family=poisson, data=ex)
#Moons~Mass
mod1<-glm(Moons~Mass, family=poisson, data=ex)
#Moons~Distance
mod2<-glm(Moons~Distance, family=poisson, data=ex)
#Moons~Distance:Mass
mod3<-glm(Moons~Distance:Mass, family=poisson, data=ex)
#Moons~Mass+Distance
mod4<-glm(Moons~Mass+Distance, family=poisson, data=ex)
#compare each model looking at AIC scores
AIC(mod0, mod1, mod2, mod3, mod4)
#LRT test mod0 and mod1
anova(mod0, mod1, test="LRT")
#LRT test mod0 and mod2
anova(mod0, mod2, test="LRT")
#LRT test mod0 and mod3
anova(mod0, mod3, test="LRT")
#LRT test mod0 and mod4
anova(mod0, mod4, test="LRT")
#checking for overdispersion. get 6.39, which is greater than 2
summary(mod0)
mod0$deviance
mod0$df.residual
mod0$deviance/mod0$df.residual
#with an overdispersion score of 6.39, we find that our data is significantly over dispersed so we re-run our datausing the quasipoisson distribution.
#Moons~Distance:Mass family=quasipoisson
mod5<-glm(Moons~Distance*Mass, family=quasipoisson, data=ex)
#rough goodness of fit test
pchisq(mod5$deviance, mod5$df.residual, lower.tail=F)
#Summary of our data
summary(mod5)
#Plot our model
par(mfrow=c(1,2))
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Mass")
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey", cex=1.2, ylab = "Log Moons (#)", xlab= "Distance")
#Diagnostic Plots
par(mfrow=c(2,2))
plot(mod5)
#Interpret Coefficients
co<-coefficients(mod5)
exp(co[2])
exp(co[3])
#Confidence Interval
exp(confint(mod5))
#Plotting the data:
#if there is more than one continuous independent variable (IV) left in the model, then graph the response variable against IV1, keeping IV2 at its mean value. Then, graph the next plot over IV2, keeping IV1 at its mean value.
#best interpretation of what the above means
#PLOT 1
coeff<-coefficients(mod5)
xvals<-sort(ex$Mass)
plot(ex$Mass, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means <-coeff[1]+coeff[2]*xvals
mean.values<-exp(log.means)
lines(xvals, mean.values, lwd=2)
#PLOT 2
coeff1<-coefficients(mod5)
xvals1<-sort(ex$Distance)
plot(ex$Distance, ex$Moons, las=1, pch=21, bg="grey",
cex=1.2, ylab="Moons")
log.means1<-coeff1[1]+coeff1[2]*xvals1
mean.values1<-exp(log.means1)
lines(xvals1, mean.values1, lwd=2)
#PLOT 3
avgD<-mean(ex$Distance)
avgD
plot(ex$Mass, ex$Moons, lwd=2, las=1, pch=19, col="grey", cex=1.2, xlab="Mass", ylab=expression(paste("Number of Moons")))
curve(expr=exp(coef(mod5)[1]+coef(mod5)[2]*x+coef(mod5)[3]*avgD), add=T, col="green")
knitr::opts_chunk$set(echo = TRUE)
#SETUP
setwd("/Users/willarosebrooks/Desktop/DUKE FALL 2017/ENV 710")
#read in the data
oyster<-read.csv("oyster.csv", header=T)
attach(oyster)
oyster
View(oyster)
c.ww6
knitr::opts_chunk$set(echo = TRUE)
x <- min(ww$YR)+(max(ww$cancer)-min(ww$cancer))*(0:100)/100
x <- min(ww$YR)+(max(ww$cancer)-min(ww$cancer))*(0:100)/100
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
#read in data
data<-read.csv("SR_McKinnon_data.csv", header=T)
attach(data)
oesm<-read.csv("OESM_subset_edit.csv", header=T)
attach(oesm)
View(oesm)
View(oesm)
View(oesm)
View(oesm)
#read in data
data<-read.csv("SR_McKinnon_data.csv", header=T)
attach(data)
oesm<-read.csv("OESM_subset_edit.csv", header=T)
attach(oesm)
View(oesm)
load("/Users/willarosebrooks/Downloads/evidence_based_2_11_16.RData")
View(data.biblio)
View(data.biomes)
View(data.interv)
View(data.outcome)
oesm.study<-select(aid, Study_objective, Study_continent, Study_country, Study_habitat, Study_type, Study_design, Study_data, Study_scale, Study_comparator, Study_population, Study_impact_on_diff_human_groups, Study_impact_on_diff_human_groups_types, Study_notes)
oesm.study<-select(aid, Study_objective, Study_continent, Study_country, Study_habitat, Study_type, Study_design, Study_data, Study_scale, Study_comparator, Study_population, Study_impact_on_diff_human_groups, Study_impact_on_diff_human_groups_types, Study_notes)
oesm.study<-select(oesm, aid, Study_objective, Study_continent, Study_country, Study_habitat, Study_type, Study_design, Study_data, Study_scale, Study_comparator, Study_population, Study_impact_on_diff_human_groups, Study_impact_on_diff_human_groups_types, Study_notes)
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyr")
oesm.study<-select(oesm, aid, Study_objective, Study_continent, Study_country, Study_habitat, Study_type, Study_design, Study_data, Study_scale, Study_comparator, Study_population, Study_impact_on_diff_human_groups, Study_impact_on_diff_human_groups_types, Study_notes)
View(oesm)
distinct?
distinct(oesm$aid)
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
#install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
View(data)
#read in data
#data<-read.csv("SR_McKinnon_data.csv", header=T)
#attach(data)
data<-read.csv("OESM_Subset_3_15.csv", header=T)
attach(data)
install.packages("magrittr")
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
#install.packages("tidyr")
install.packages("magrittr")
install.packages("dplyr")
install.packages("ggplot2")
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>%
# group data by intervention type and outcome type
count() %>% # count observations
spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_count <-count(group_by(data$Int_cat,data$Outcome_cat)
#io_counts <- data %>%
#group_by(Int_cat,Outcome_cat) %>%
# group data by intervention type and outcome type
#count() %>% # count observations
#spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
#gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
#mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_count <-count(group_by(data$Int_cat,data$Outcome_cat)
#io_counts <- data %>%
#group_by(Int_cat,Outcome_cat) %>%
# group data by intervention type and outcome type
#count() %>% # count observations
#spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
#gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
#mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_count <- count(group_by(data$Int_cat, data$Outcome_cat))
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("magrittr")
install.packages("dplyr")
install.packages("ggplot2")
#io_counts <- data %>%
#group_by(Int_cat,Outcome_cat) %>%
# group data by intervention type and outcome type
#count() %>% # count observations
#spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
#gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
#mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_count <- count(group_by(data$Int_cat, data$Outcome_cat))
#io_counts <- data %>%
#group_by(Int_cat,Outcome_cat) %>%
# group data by intervention type and outcome type
#count() %>% # count observations
#spread(key=Int_cat, value=n) %>%
# spread the values (each intervention type in own column, this allows us to find NAs)
#   mutate(PES=0) %>%
#gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
#mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_count <- group_by(data$Int_cat, data$Outcome_cat)
for (i in Int_cat){
for (j in Outcome_cat){
subset <- filter (data, Outcome_cat == j, Int_cat == i)
io_counts[j,i] <- n_distinct(subset$aid)
}
}
for (i in Int_type){
for (j in Outcome_type){
subset <- filter (data, Outcome_cat == j, Int_cat == i)
io_counts[j,i] <- n_distinct(subset$aid)
}
}
for (i in Int_cat){
for (j in Outcome_cat){
subset <- filter (data, Outcome_type == j, Int_type == i)
io_counts[j,i] <- n_distinct(subset$aid)
}
}
for (i in Int_cat){
for (j in Outcome_cat){
subset <- filter (data, Outcome_cat == j, Int_cat == i)
io_counts[j,i] <- n_distinct(subset$aid)
}
}
#set data as factor
data$Int_cat<-as.factor(data$Int_cat)
data$Outcome_cat<-as.factor(data$Outcome_cat)
for (i in Int_cat){
for (j in Outcome_cat){
subset <- filter (data, Outcome_cat == j, Int_cat == i)
io_counts[j,i] <- n_distinct(subset$aid)
}
}
View(data)
View(data.biblio)
View(air)
View(air)
View(air)
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
#read in data
#data<-read.csv("SR_McKinnon_data.csv", header=T)
#attach(data)
data<-read.csv("OESM_subset_edit.csv", header=T)
attach(data)
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
#   mutate(PES=0) %>%
gather("Int_cat","n",1. Land/water management:10. Institutional/organizational development) %>%
mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
#   mutate(PES=0) %>%
gather("Int_cat","n",1. Land/water management:10. Institutional/organizational development) %>%
# mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
# mutate(PES=0) %>%
# gather("Int_cat","n",1. Land/water management:10. Institutional/organizational development) %>%
# mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
#read in data
#data<-read.csv("SR_McKinnon_data.csv", header=T)
#attach(data)
data<-read.csv("OESM_subset_edit.csv", header=T)
attach(data)
io_counts <- data %>%
group_by(Int_cat,Outcome_cat) %>% # group data by intervention type and outcome type
count() %>% # count observations
spread(key=Int_cat, value=n) %>%  # spread the values (each intervention type in own column, this allows us to find NAs)
#mutate(PES=0) %>%
gather("Int_cat","n") %>% # gather the values (in order to fill NAs with 0s)
mutate(n=ifelse(is.na(n),0,as.integer(n))) # fill NAs with 0
knitr::opts_chunk$set(echo = TRUE)
#set wd
setwd("/Users/willarosebrooks/Desktop/OESM/R")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
View(data)
setwd("/Users/willarosebrooks/Documents/wrb15.github.io")
setwd("/Users/willarosebrooks/Documents/GitHub/wrb15.github.io")
